<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED offset CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED format CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Abhimanyu.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="RIO" type="required" numBits="16" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field255728b1">
	</Field>
	<Field name="OP" type="required" numBits="4" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field440bec5c">
	</Field>
	<Field name="ADDR" type="required" numBits="12" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Fieldaf854b7">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" id="module.Register4288a50" />
	<Register name="AR" width="12" id="module.Register1f08c1f2" />
	<Register name="DR" width="16" id="module.Register28c3f477" />
	<Register name="E" width="1" id="module.Register7dc42582" />
	<Register name="I" width="1" id="module.Register3d7e5a60" />
	<Register name="INPR" width="8" id="module.Register64201b6c" />
	<Register name="IR" width="16" id="module.Register53772bd3" />
	<Register name="OUTR" width="8" id="module.Registerfc3ec0a" />
	<Register name="PC" width="12" id="module.Register40210ac8" />
	<Register name="S" width="1" id="module.Register4e7d0c3c" />
	<Register name="T" width="1" id="module.Register5e4e1a45" />
	<Register name="TR" width="16" id="module.Register16f13c0e" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="HALT-BIT" bit="0" register="module.Register4e7d0c3c" halt="true" id="module.ConditionBit4689dc41" />

	<!--............. rams ..........................-->
	<RAM name="M" length="4096" cellSize="16" id="module.RAM60333440" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="module.Register4288a50" start="0" numBits="16" value="0" id="microinstruction.CpusimSet596c6717" />
	<Set name="E&lt;-0" register="module.Register7dc42582" start="0" numBits="1" value="0" id="microinstruction.CpusimSet2004d94e" />
	<Set name="S&lt;-1" register="module.Register4e7d0c3c" start="0" numBits="1" value="1" id="microinstruction.CpusimSet62767361" />

	<!--............. test ..........................-->
	<Test name="IF(AC(0)!=0)THEN SKIP 1" register="module.Register4288a50" start="0" numBits="1" comparison="NE" value="0" omission="1" id="microinstruction.Test4d433fd6" />
	<Test name="IF(AC(0)==1)THEN SKIP 1" register="module.Register4288a50" start="0" numBits="1" comparison="EQ" value="1" omission="1" id="microinstruction.Test77adadb6" />
	<Test name="IF(AC==0)THEN SKIP 1" register="module.Register4288a50" start="0" numBits="16" comparison="EQ" value="0" omission="1" id="microinstruction.Test7165c4a4" />
	<Test name="IF(DR!=0)THEN SKIP 1" register="module.Register28c3f477" start="0" numBits="16" comparison="NE" value="0" omission="1" id="microinstruction.Test20d95c92" />
	<Test name="IF(E==0)THEN SKIP 1" register="module.Register7dc42582" start="0" numBits="1" comparison="EQ" value="0" omission="1" id="microinstruction.Test74b06ad0" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="module.Register4288a50" overflowBit="module.ConditionBit4689dc41" delta="1" id="microinstruction.Increment6e6aa9ed" />
	<Increment name="AR&lt;-AR+1" register="module.Register1f08c1f2" delta="1" id="microinstruction.Increment31751060" />
	<Increment name="DR&lt;-DR+1" register="module.Register28c3f477" delta="1" id="microinstruction.Increment5ba2f710" />
	<Increment name="PC&lt;-PC+1" register="module.Register40210ac8" delta="1" id="microinstruction.Increment2c33f05e" />

	<!--............. shift .........................-->
	<Shift name="SHL(AC,1)" type="logical" source="module.Register4288a50" destination="module.Register4288a50" direction="right" distance="1" id="microinstruction.Shift421499de" />
	<Shift name="SHR(AC,1)" type="logical" source="module.Register4288a50" destination="module.Register4288a50" direction="left" distance="1" id="microinstruction.Shift711630c2" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="module.Register4288a50" source2="module.Register4288a50" destination="module.Register4288a50" id="microinstruction.Logical71870930" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="module.Register4288a50" source2="module.Register28c3f477" destination="module.Register4288a50" id="microinstruction.Logical31d7b7e2" />
	<Logical name="E&lt;-E'" type="NOT" source1="module.Register7dc42582" source2="module.Register7dc42582" destination="module.Register7dc42582" id="microinstruction.Logical62a282f8" />
	<Logical name="TR&lt;-0" type="XOR" source1="module.Register16f13c0e" source2="module.Register16f13c0e" destination="module.Register16f13c0e" id="microinstruction.Logical2890ce74" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="module.Register4288a50" source2="module.Register28c3f477" destination="module.Register4288a50" overflowBit="module.ConditionBit4689dc41" id="microinstruction.Arithmetic61179cdf" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="module.Register7dc42582" srcStartBit="0" dest="module.Register4288a50" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR6d734fb8" />
	<TransferRtoR name="AC(0)&lt;-T" source="module.Register5e4e1a45" srcStartBit="0" dest="module.Register4288a50" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR1bb0a5ac" />
	<TransferRtoR name="AC(15)&lt;-E" source="module.Register7dc42582" srcStartBit="0" dest="module.Register4288a50" destStartBit="15" numBits="1" id="microinstruction.TransferRtoR357d3bc0" />
	<TransferRtoR name="AC&lt;-DR" source="module.Register28c3f477" srcStartBit="0" dest="module.Register4288a50" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR68d1b8d4" />
	<TransferRtoR name="AR&lt;-IR(4-15)" source="module.Register53772bd3" srcStartBit="4" dest="module.Register1f08c1f2" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR1fa824f9" />
	<TransferRtoR name="AR&lt;-PC" source="module.Register40210ac8" srcStartBit="0" dest="module.Register1f08c1f2" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR12b6f65" />
	<TransferRtoR name="AR&lt;-TR(4-15)" source="module.Register16f13c0e" srcStartBit="4" dest="module.Register1f08c1f2" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR5dd4e7bb" />
	<TransferRtoR name="E&lt;-AC(0)" source="module.Register4288a50" srcStartBit="0" dest="module.Register7dc42582" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR38a6f3cd" />
	<TransferRtoR name="E&lt;-AC(15)" source="module.Register4288a50" srcStartBit="15" dest="module.Register4288a50" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR3c7d9c30" />
	<TransferRtoR name="E&lt;-T" source="module.Register5e4e1a45" srcStartBit="0" dest="module.Register7dc42582" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR46ee5d3b" />
	<TransferRtoR name="PC&lt;-AR" source="module.Register1f08c1f2" srcStartBit="0" dest="module.Register40210ac8" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR4959e6b0" />
	<TransferRtoR name="T&lt;-AC(0)" source="module.Register4288a50" srcStartBit="0" dest="module.Register5e4e1a45" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR134ac1b0" />
	<TransferRtoR name="T&lt;-E" source="module.Register7dc42582" srcStartBit="0" dest="module.Register5e4e1a45" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR438653f5" />
	<TransferRtoR name="TR&lt;-PC" source="module.Register40210ac8" srcStartBit="0" dest="module.Register16f13c0e" destStartBit="4" numBits="12" id="microinstruction.TransferRtoR7735c93b" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR(0-3)" ir="module.Register53772bd3" id="microinstruction.Decode71dfcd0b" />

	<!--............. set condition bit .............-->
	<!-- none -->

	<!--............. io ............................-->
	<IO name="AC&lt;-INPR" direction="input" type="integer" buffer="module.Register4288a50" connection="[console]" id="microinstruction.IO345dd5c1" />
	<IO name="OUTR&lt;-AC" direction="output" type="integer" buffer="module.Register4288a50" connection="[console]" id="microinstruction.IO45b53144" />

	<!--............. memory access .................-->
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="module.RAM60333440" data="module.Register28c3f477" address="module.Register1f08c1f2" id="microinstruction.MemoryAccess1c1044d8" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="module.RAM60333440" data="module.Register53772bd3" address="module.Register1f08c1f2" id="microinstruction.MemoryAccess13a865c4" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="module.RAM60333440" data="module.Register4288a50" address="module.Register1f08c1f2" id="microinstruction.MemoryAccess498149ad" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="module.RAM60333440" data="module.Register28c3f477" address="module.Register1f08c1f2" id="microinstruction.MemoryAccess25d27ec8" />
	<MemoryAccess name="M[AR]&lt;-TR" direction="write" memory="module.RAM60333440" data="module.Register16f13c0e" address="module.Register1f08c1f2" id="microinstruction.MemoryAccess3b7ad82e" />
	<MemoryAccess name="TR&lt;-M[AR]" direction="read" memory="module.RAM60333440" data="module.Register16f13c0e" address="module.Register1f08c1f2" id="microinstruction.MemoryAccess6bac1cc0" />

	<!--............. end ...........................-->
	<End id="microinstruction.End28a3fc39" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="microinstruction.TransferRtoR12b6f65" />
		<Microinstruction microRef="microinstruction.MemoryAccess13a865c4" />
		<Microinstruction microRef="microinstruction.Increment2c33f05e" />
		<Microinstruction microRef="microinstruction.Decode71dfcd0b" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="AND_I" opcode="1" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess13a865c4" />
		<Microinstruction microRef="microinstruction.TransferRtoR5dd4e7bb" />
		<Microinstruction microRef="microinstruction.MemoryAccess1c1044d8" />
		<Microinstruction microRef="microinstruction.Logical31d7b7e2" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" format="RIO" >
		<Microinstruction microRef="microinstruction.IO45b53144" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" format="RIO" >
		<Microinstruction microRef="microinstruction.IO345dd5c1" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="e001" format="RIO" >
		<Microinstruction microRef="microinstruction.CpusimSet62767361" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="e002" format="RIO" >
		<Microinstruction microRef="microinstruction.Test74b06ad0" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
		<Microinstruction microRef="microinstruction.Increment2c33f05e" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="e004" format="RIO" >
		<Microinstruction microRef="microinstruction.Test7165c4a4" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
		<Microinstruction microRef="microinstruction.Increment2c33f05e" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="e008" format="RIO" >
		<Microinstruction microRef="microinstruction.Test77adadb6" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
		<Microinstruction microRef="microinstruction.Increment2c33f05e" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="e010" format="RIO" >
		<Microinstruction microRef="microinstruction.Test4d433fd6" />
		<Microinstruction microRef="microinstruction.Increment2c33f05e" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="e020" format="RIO" >
		<Microinstruction microRef="microinstruction.Increment6e6aa9ed" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="e040" format="RIO" >
		<Microinstruction microRef="microinstruction.TransferRtoR134ac1b0" />
		<Microinstruction microRef="microinstruction.Shift421499de" />
		<Microinstruction microRef="microinstruction.TransferRtoR357d3bc0" />
		<Microinstruction microRef="microinstruction.TransferRtoR46ee5d3b" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="e080" format="RIO" >
		<Microinstruction microRef="microinstruction.TransferRtoR438653f5" />
		<Microinstruction microRef="microinstruction.TransferRtoR3c7d9c30" />
		<Microinstruction microRef="microinstruction.Shift711630c2" />
		<Microinstruction microRef="microinstruction.TransferRtoR1bb0a5ac" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="e100" format="RIO" >
		<Microinstruction microRef="microinstruction.Logical62a282f8" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="e200" format="RIO" >
		<Microinstruction microRef="microinstruction.Logical71870930" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="e400" format="RIO" >
		<Microinstruction microRef="microinstruction.CpusimSet2004d94e" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="e800" format="RIO" >
		<Microinstruction microRef="microinstruction.CpusimSet596c6717" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="ISZ_I" opcode="d" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess6bac1cc0" />
		<Microinstruction microRef="microinstruction.TransferRtoR5dd4e7bb" />
		<Microinstruction microRef="microinstruction.Increment31751060" />
		<Microinstruction microRef="microinstruction.MemoryAccess25d27ec8" />
		<Microinstruction microRef="microinstruction.MemoryAccess1c1044d8" />
		<Microinstruction microRef="microinstruction.Increment5ba2f710" />
		<Microinstruction microRef="microinstruction.Test20d95c92" />
		<Microinstruction microRef="microinstruction.Increment2c33f05e" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="c" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess1c1044d8" />
		<Microinstruction microRef="microinstruction.Increment5ba2f710" />
		<Microinstruction microRef="microinstruction.MemoryAccess25d27ec8" />
		<Microinstruction microRef="microinstruction.Test20d95c92" />
		<Microinstruction microRef="microinstruction.Increment2c33f05e" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="BSA_I" opcode="b" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess6bac1cc0" />
		<Microinstruction microRef="microinstruction.TransferRtoR5dd4e7bb" />
		<Microinstruction microRef="microinstruction.Logical2890ce74" />
		<Microinstruction microRef="microinstruction.TransferRtoR7735c93b" />
		<Microinstruction microRef="microinstruction.MemoryAccess3b7ad82e" />
		<Microinstruction microRef="microinstruction.Increment31751060" />
		<Microinstruction microRef="microinstruction.TransferRtoR4959e6b0" />
		<Microinstruction microRef="microinstruction.TransferRtoR4959e6b0" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="a" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.Logical2890ce74" />
		<Microinstruction microRef="microinstruction.TransferRtoR7735c93b" />
		<Microinstruction microRef="microinstruction.MemoryAccess3b7ad82e" />
		<Microinstruction microRef="microinstruction.Increment31751060" />
		<Microinstruction microRef="microinstruction.TransferRtoR4959e6b0" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="9" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess6bac1cc0" />
		<Microinstruction microRef="microinstruction.TransferRtoR5dd4e7bb" />
		<Microinstruction microRef="microinstruction.TransferRtoR4959e6b0" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="8" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.TransferRtoR4959e6b0" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="7" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess6bac1cc0" />
		<Microinstruction microRef="microinstruction.TransferRtoR5dd4e7bb" />
		<Microinstruction microRef="microinstruction.MemoryAccess498149ad" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="6" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess498149ad" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="5" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess6bac1cc0" />
		<Microinstruction microRef="microinstruction.TransferRtoR5dd4e7bb" />
		<Microinstruction microRef="microinstruction.MemoryAccess1c1044d8" />
		<Microinstruction microRef="microinstruction.TransferRtoR68d1b8d4" />
		<Microinstruction microRef="microinstruction.Logical31d7b7e2" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="4" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess1c1044d8" />
		<Microinstruction microRef="microinstruction.TransferRtoR68d1b8d4" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="3" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess6bac1cc0" />
		<Microinstruction microRef="microinstruction.TransferRtoR5dd4e7bb" />
		<Microinstruction microRef="microinstruction.MemoryAccess1c1044d8" />
		<Microinstruction microRef="microinstruction.Arithmetic61179cdf" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="2" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess1c1044d8" />
		<Microinstruction microRef="microinstruction.Arithmetic61179cdf" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR1fa824f9" />
		<Microinstruction microRef="microinstruction.MemoryAccess1c1044d8" />
		<Microinstruction microRef="microinstruction.Logical31d7b7e2" />
		<Microinstruction microRef="microinstruction.End28a3fc39" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="module.RAM60333440" startingAddress="34" />

	<!--............. module window info ............-->
	<ModuleWindowsInfo>
		<RAMWindowInfo ram="module.RAM60333440" cellSize="1" contentsbase="Decimal" addressbase="Hexadecimal" 
			top="7" left="844" width="465" height="541" />
		<RegisterWindowInfo base="Hexadecimal" 
			top="20" left="461" width="315" height="302" />
	</ModuleWindowsInfo>

</Machine>
